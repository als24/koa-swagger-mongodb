import Doc, { description } from '../../dist'; // 2 import style avaliable
import dbClient from '../middleware/db'
const {
  request, summary, query, tags, responses, prefix, body
} = Doc;

const tag = tags(['admin']);
const pageParams = {
  page: { type: 'number', description: 'currentPage' },
  pageSize: { type: 'number', description: 'Number of data bars per page'}
}
const addadminParams = {
  name: { type: 'string', require: true, description: 'login name' },
  password: { type: 'string', require: true, description: 'login password' },
  power: { type: 'number', default: 1, description: '权限： 1、超级管理员,2、普通管理员,3、类目管理员' }
}
@prefix('/v1')
export default class admin {
  /**
   * @swagger
   * @param  {[type]}  ctx [description]
   * @return {Promise}     [description]
   */
  @request('get', '/adminList')
  @summary('get admin user list')
  @description('this is a test')
  @tag
  @query(pageParams)
  @responses({
    200: { message: 'success', code: 200},
    500: { message: 'error', code: 500}
  })
  static async adminList (ctx){
    const params  = ctx.request.query;
    let result = await dbClient.find('admin',{}, params.page, params.pageSize)
    ctx.body = result
  }
  /**
   * add Administrator
   * @type {Object}
   */
  @request('post','/addAdmin')
  @summary('add a admin user')
  @description('添加管理员')
  @tag
  @query(addadminParams)
  @body(addadminParams)
  static async addAdmin(ctx){
    let params = ctx.request.query
    let result = {}
    if(params.name &&params.password){
       result = await dbClient.insert('admin', params)
    }else{
      result = {
        code: 500,
        message: 'error',
        data: 'name or password is null'
      }
    }
    ctx.body = result
  }
}
@prefix('/v2')
export class v2{
  @request('GET', '/prefix2')
  @summary('class decorator for url prefix')
  @description('class decorator for url prefix')
  @tag
  @query({
    page: {
      type: 'string',
      description: 'page number'
    }
  })
  @responses({
    200: { description: 'success' },
    500: { description: 'something wrong about server' }
  })
  static async classPrefix(ctx) {
    const { page } = ctx.request.query;
    ctx.body = { result: page };
  }
}

import Doc, { description } from '../../dist'; // 2 import style avaliable

const {
  request, summary, query, tags, responses, prefix
} = Doc;

const tag = tags(['admin']);

@prefix('/v1')
export default class admin {
  @request('GET', '/prefix')
  @summary('class decorator for url prefix')
  @description('class decorator for url prefix')
  @tag
  @query({
    page: {
      type: 'string',
      description: 'page number'
    }
  })
  @responses({
    200: { description: 'success' },
    500: { description: 'something wrong about server' }
  })
  static async classPrefix(ctx) {
    const { page } = ctx.request.query;
    ctx.body = { result: page };
  }
  /**
   * @swagger
   * @param  {[type]}  ctx [description]
   * @return {Promise}     [description]
   */
  @request('get', '/getAdminList')
  @summary('get admin user list')
  @description('this is a test')
  @tag
  @query({})
  @responses({
    200: { message: 'success', code: 200},
    500: { message: 'error', code: 500}
  })
  static async getAdminList (ctx){
    ctx.body = {
      responses:true,
      data: {},
      message: 'success'
    }
  }
}
@prefix('/v2')
export class v2{
  @request('GET', '/prefix2')
  @summary('class decorator for url prefix')
  @description('class decorator for url prefix')
  @tag
  @query({
    page: {
      type: 'string',
      description: 'page number'
    }
  })
  @responses({
    200: { description: 'success' },
    500: { description: 'something wrong about server' }
  })
  static async classPrefix(ctx) {
    const { page } = ctx.request.query;
    ctx.body = { result: page };
  }
}
